node{

try {
	notifyBuild('STARTED')
    
    def maven_Home = tool name: 'maven3.8.7', type: 'maven'
    
    stage('GitCheckout')
    {
        git branch: 'development', credentialsId: 'Github_Credentials', url: 'https://github.com/Pratap-devops-training/maven-web-application.git'
    }
    stage('Maven Build')
    {
    sh "${maven_Home}/bin/mvn clean package"
    }
    stage('exicuteSonarQubeReport')
    {
    sh "${maven_Home}/bin/mvn sonar:sonar " 
    }
    stage('Upload artifacts into nexus')
    {
    sh "${maven_Home}/bin/mvn deploy" 
    }
    stage('DepolyToTomcat')
    {
       sshagent(['80dfeb09-5d5d-4ecf-b887-a20ea5ddf0fd']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.38.17:/opt/apache-tomcat-9.0.71/webapps"
}
}
} catch (e) {
    // If there was an exception thrown, the build failed
    currentBuild.result = "FAILED"
    throw e
  } finally {
    // Success or failure, always send notifications
    notifyBuild(currentBuild.result)
  }
}

def notifyBuild(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: 'mavenprojectypebuild')
}
